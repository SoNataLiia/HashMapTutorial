import java.util.HashMap;
/*
putIfAbsent ‚Äî –≤—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–ª—é—á–∞ –µ—â—ë –Ω–µ—Ç.

replace(k, oldV, newV) ‚Äî –∑–∞–º–µ–Ω—è–µ—Ç, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å oldV.

compute(k, (k, v) -> ...) ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é.

merge(k, v, function) ‚Äî –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —Å—Ç–∞—Ä–æ–µ –∏ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—É–º–º–∏—Ä—É–µ—Ç).

clear() ‚Äî –æ—á–∏—â–∞–µ—Ç –∫–∞—Ä—Ç—É.

isEmpty() ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –µ—Å–ª–∏ –∫–∞—Ä—Ç–∞ –ø—É—Å—Ç–∞—è.
 */
public class MetodosAvanzados {
    public static void ejecutar(){
        System.out.println("\n=== M√âTODOS AVANZADOS DE HASHMAP ===");

        HashMap<String, Integer> mapa = new HashMap<>();

        // putIfAbsent: solo inserta si la clave no existe
        mapa.put("A", 1);
        mapa.putIfAbsent("A", 100); // No se inserta
        mapa.putIfAbsent("B", 2); // S√≠ se inserta

        System.out.println("Despu√©s de putIfAbsent: " + mapa);

        // replace(clave, antiguoValor, nuevoValor): reemplaza si y solo si el valor actual coincide
        boolean reemplazo = mapa.replace("A", 1, 99);
        System.out.println("¬øSe reemplaz√≥ 'A'? " + reemplazo);
        System.out.println("Contenido: " + mapa);

        //compute(): actualiza el valor asociado a una clave usando una funci√≥n
        mapa.compute("B", (k, v) -> v == null ? 1 : v + 10);
        System.out.println("Despu√©s de compute en 'B': " +  mapa);

        // compute() : actualiza el valor asociado a una clave usando una funci√≥n
        mapa.merge("A", 5, Integer::sum); // A ya existe: 999 + 5 = 1004
        mapa.merge("C", 3, Integer::sum); // C no existe :  se crea
        System.out.println("Despu√©s de merge: " + mapa);

        //isEmpty() y clear()
        System.out.println("¬øEst√° vac√≠o el mapa?" + mapa.isEmpty());
        mapa.clear();
        System.out.println("Despu√©s de clear(): " + mapa);
        System.out.println("¬øAhora est√° vac√≠o?" + mapa.isEmpty());



    }
}
/*


Despu√©s de putIfAbsent: {A=1, B=2}
¬øSe reemplaz√≥ 'A'? true
Contenido: {A=99, B=2}
Despu√©s de compute en 'B': {A=99, B=12}
Despu√©s de merge: {A=104, B=12, C=3}
¬øEst√° vac√≠o el mapa? false
Despu√©s de clear(): {}
¬øAhora est√° vac√≠o? true

üß† –ü–æ—à–∞–≥–æ–≤–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ:
üîπ –®–∞–≥ 1. putIfAbsent

mapa.put("A", 1);               // –≤—Å—Ç–∞–≤–ª—è–µ–º –∫–ª—é—á "A" —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 1
mapa.putIfAbsent("A", 100);     // –Ω–µ –≤—Å—Ç–∞–≤–ª—è–µ—Ç 100, –ø–æ—Ç–æ–º—É —á—Ç–æ –∫–ª—é—á "A" —É–∂–µ –µ—Å—Ç—å
mapa.putIfAbsent("B", 2);       // –≤—Å—Ç–∞–≤–ª—è–µ—Ç, –ø–æ—Ç–æ–º—É —á—Ç–æ –∫–ª—é—á–∞ "B" –µ—â—ë –Ω–µ—Ç

üìå –†–µ–∑—É–ª—å—Ç–∞—Ç:

{A=1, B=2}

üîç –ó–∞—á–µ–º –Ω—É–∂–Ω–æ putIfAbsent:
–ß—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –≠—Ç–æ –ø–æ–ª–µ–∑–Ω–æ, –∫–æ–≥–¥–∞ —Ö–æ—á–µ—à—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.
üîπ –®–∞–≥ 2. replace(clave, antiguoValor, nuevoValor)

boolean reemplazo = mapa.replace("A", 1, 99); // –∑–∞–º–µ–Ω–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ "A" –Ω–∞ 99 —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ ‚Äî 1

üìå –î–æ —ç—Ç–æ–≥–æ "A" = 1, –∑–Ω–∞—á–∏—Ç ‚Äî –∑–∞–º–µ–Ω–∞ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç ‚úÖ
–¢–µ–ø–µ—Ä—å mapa = {A=99, B=2}

üîç –ó–∞—á–µ–º –Ω—É–∂–µ–Ω —ç—Ç–æ—Ç –º–µ—Ç–æ–¥:
–î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–∞–º–µ–Ω—ã. –û–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç—ã —Ç–æ—á–Ω–æ –∑–Ω–∞–µ—à—å —Å—Ç–∞—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫–∏ –ø—Ä–∏ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞—Ö.
üîπ –®–∞–≥ 3. compute()

mapa.compute("B", (k, v) -> v == null ? 1 : v + 10);

üìå –ö–ª—é—á "B" = 2 ‚Üí 2 + 10 = 12
–¢–µ–ø–µ—Ä—å mapa = {A=99, B=12}

üîç –ß—Ç–æ –¥–µ–ª–∞–µ—Ç compute:
–ü–æ–∑–≤–æ–ª—è–µ—Ç –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É, –ø—Ä–∏–º–µ–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—é.
(k, v) -> v + 10 ‚Äî –æ–∑–Ω–∞—á–∞–µ—Ç "–ø—Ä–∏–±–∞–≤–∏—Ç—å 10 –∫ —Ç–µ–∫—É—â–µ–º—É –∑–Ω–∞—á–µ–Ω–∏—é".
üîπ –®–∞–≥ 4. merge()

mapa.merge("A", 5, Integer::sum);  // "A" = 99 ‚Üí 99 + 5 = 104
mapa.merge("C", 3, Integer::sum);  // "C" –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚Üí –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∫–∞–∫ "C" = 3

üìå –¢–µ–ø–µ—Ä—å mapa = {A=104, B=12, C=3}

üîç –ß—Ç–æ –¥–µ–ª–∞–µ—Ç merge:
–ï—Å–ª–∏ –∫–ª—é—á –µ—Å—Ç—å ‚Üí –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —Å—Ç–∞—Ä–æ–µ –∏ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç).
–ï—Å–ª–∏ –∫–ª—é—á–∞ –Ω–µ—Ç ‚Üí –ø—Ä–æ—Å—Ç–æ –≤—Å—Ç–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ.

–û—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–æ–≤, —Å—É–º–º, –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–π.
üîπ –®–∞–≥ 5. isEmpty() –∏ clear()

System.out.println(mapa.isEmpty()); // false ‚Üí –∫–∞—Ä—Ç–∞ –ù–ï –ø—É—Å—Ç–∞—è
mapa.clear();                       // –æ—á–∏—â–∞–µ—Ç –í–°–Å
System.out.println(mapa);           // {}
System.out.println(mapa.isEmpty()); // true ‚Üí —Ç–µ–ø–µ—Ä—å –∫–∞—Ä—Ç–∞ –ø—É—Å—Ç–∞—è

üîç –≠—Ç–∏ –º–µ—Ç–æ–¥—ã:

    clear() ‚Äî –æ—á–∏—â–∞–µ—Ç –∫–∞—Ä—Ç—É.

    isEmpty() ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—É—Å—Ç–∞ –ª–∏ –∫–∞—Ä—Ç–∞.

‚ú® –†–µ–∑—é–º–µ
–ú–µ—Ç–æ–¥	–ß—Ç–æ –¥–µ–ª–∞–µ—Ç	–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
putIfAbsent	–í—Å—Ç–∞–≤–ª—è–µ—Ç, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–ª—é—á–∞ –µ—â—ë –Ω–µ—Ç	–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
replace	–ó–∞–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ = –æ–∂–∏–¥–∞–µ–º–æ–µ	–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–º–µ–Ω–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ä–æ–≥–æ
compute	–ò–∑–º–µ–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É —Å –ø–æ–º–æ—â—å—é —Ñ–æ—Ä–º—É–ª—ã	–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ª–æ–≥–∏–∫–∞, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π
merge	–û–±—ä–µ–¥–∏–Ω—è–µ—Ç —Å—Ç–∞—Ä–æ–µ –∏ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ	–°—É–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –∏ –¥—Ä.
clear	–£–¥–∞–ª—è–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã	–û–±–Ω—É–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã
isEmpty	–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—É—Å—Ç–∞—è –ª–∏ –∫–∞—Ä—Ç–∞	–î–ª—è —É—Å–ª–æ–≤–∏–π, –ø—Ä–æ–≤–µ—Ä–æ–∫, –ª–æ–≥–∏–∫–∏
 */
